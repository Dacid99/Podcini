plugins {
    id("com.android.library")
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply from: "../common.gradle"
apply from: "../playFlavor.gradle"

android {
    namespace "ac.mdiq.podcini.core"

    lint {
        disable "InvalidPeriodicWorkRequestInterval", "ObsoleteLintCustomCheck", "DefaultLocale", "UnusedAttribute",
                "ParcelClassLoader", "CheckResult", "TrustAllX509TrustManager",
                "StaticFieldLeak", "IconDensities", "IconDuplicates"
    }

    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: 'ac.mdiq.podcini.core.ApCoreEventBusIndex']
            }
        }
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation project(':event')
    implementation project(':model')
    implementation project(':net:common')
    implementation project(':net:download:service-interface')
    implementation project(':net:ssl')
    implementation project(':net:sync:gpoddernet')
    implementation project(':net:sync:model')
    implementation project(':parser:feed')
    implementation project(':parser:media')
    implementation project(':playback:base')
    implementation project(':playback:cast')
    implementation project(':storage:database')
    implementation project(':storage:preferences')
    implementation project(':ui:app-start-intent')
    implementation project(':ui:common')
    implementation project(':ui:i18n')
    implementation project(':ui:png-icons')

    kapt "androidx.annotation:annotation:$annotationVersion"

    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.core:core:$coreVersion"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation "androidx.fragment:fragment:$fragmentVersion"
    implementation "androidx.media:media:$mediaVersion"
    implementation "androidx.preference:preference:$preferenceVersion"
    implementation "androidx.work:work-runtime:$workManagerVersion"
    implementation "com.google.android.material:material:$googleMaterialVersion"

    implementation "org.apache.commons:commons-lang3:$commonslangVersion"
    implementation "commons-io:commons-io:$commonsioVersion"
    implementation "org.jsoup:jsoup:$jsoupVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion@aar"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$okhttpVersion"
    implementation "com.squareup.okio:okio:$okioVersion"
    implementation "org.greenrobot:eventbus:$eventbusVersion"
//    annotationProcessor "org.greenrobot:eventbus-annotation-processor:$eventbusVersion"
    kapt "org.greenrobot:eventbus-annotation-processor:$eventbusVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "com.annimon:stream:$annimonStreamVersion"

    implementation "androidx.media3:media3-exoplayer:$media3Version"
    implementation "androidx.media3:media3-ui:$media3Version"
    implementation "androidx.media3:media3-datasource-okhttp:$media3Version"
    implementation "androidx.media3:media3-common:$media3Version"

    // Non-free dependencies:
    playApi "com.google.android.support:wearable:$wearableSupportVersion"
    compileOnly "com.google.android.wearable:wearable:$wearableSupportVersion"

    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "junit:junit:$junitVersion"
//    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
//    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation 'javax.inject:javax.inject:1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
}

kapt {
    arguments {
        arg('eventBusIndex', 'ac.mdiq.podcini.core.ApCoreEventBusIndex')
    }
}